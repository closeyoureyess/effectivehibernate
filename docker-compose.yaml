services:
  postgres:
    container_name: effectivehiberpostgres
    image: postgres:17.2
    restart: "no"
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${BASEPROJECT_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${BASEPROJECT_DATABASE_PASSWORD}
      POSTGRES_DB: ${BASEPROJECT_DATABASE_NAME}
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  effectivehibernate:
    image: effectivehibernate:latest
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    restart: "no"
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mynewdatabase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
  redis:
    image: redis:7.4.2
    restart: "no"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4:9.2.0
    restart: "no"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
      - ./docker/pgadmin/pgpass:/pgadmin4/pgpass
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit -1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/pgpass; /entrypoint.sh;"
volumes:
  postgres_data:
  redis_data:
  pgadmin_data: